├── FirstTask/                      # Решение задачи 1 (компрессия/декомпрессия строки)
│   ├── Compression.cs              # Алгоритм сжатия строки
│   ├── Decompression.cs            # Алгоритм восстановления строки
│   └── IStringProcessing.cs        # Интерфейс для обработки строк
│
├── SecondTask/                     # Решение задачи 2 (потокобезопасный сервер)
│   ├── Server.cs                   # Класс сервера с методами GetCount() и AddToCount()
│   └── ForTest/                    # 
│       └── ServerForTest.cs        # Класс сервера для тестов
│
├── ThirdTask/
│    ├── Interfaces/                # Интерфейсы для обработки логов
│       ├── ILogParser.cs           # 
│       ├── ILogProcessor.cs        # 
│       └── IOutputWriter.cs        # 
│    ├── Models/                    # Модели данных
│       └── LogStruct.cs            # Стандартизированная структура лога
│    ├── Output/                    # Реализации вывода
│       └── FileOutputWriter.cs     # Запись логов в файл
│    ├── Parsers/                   # Парсеры для разных форматов логов
│       ├── Format1LogParser.cs     # Парсер для формата 1 (10.03.2025 15:14:49.523 INFORMATION  Версия программы: '3.4.0.48729')
│       └── Format2LogParser.cs     # Парсер для формата 2 (2025-03-10 15:14:51.5882| INFO|11|MobileComputer.GetDeviceId| Код устройства: '@MINDEO-M40-D-410244015546')
│    ├── Processing/                # 
│       └── LogProcessor.cs         # Координирует обработку строк
│    └── Utils/                     # Вспомогательные утилиты
│        ├── GetPrefixedPath.cs     # Создание перфикса для валидного выходного файла
│        └── LogLevelNormalizer.cs  # Нормализация уровней логирования
│
├── Tests/                         # Юнит-тесты для всех задач
│   ├── FirstTaskTests.cs
│   ├── SecondTaskTests.cs
│   └── ThirdTaskTests.cs
│
└── Program.cs                    # Точка входа (запуск задачи 3)
